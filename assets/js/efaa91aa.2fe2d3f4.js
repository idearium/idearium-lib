"use strict";(self.webpackChunkidearium_lib_docs=self.webpackChunkidearium_lib_docs||[]).push([[223],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=l.createContext({}),o=function(e){var t=l.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=o(e.components);return l.createElement(u.Provider,{value:t},e.children)},y="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,u=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),y=o(a),c=n,m=y["".concat(u,".").concat(c)]||y[c]||p[c]||r;return a?l.createElement(m,i(i({ref:t},d),{},{components:a})):l.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[y]="string"==typeof e?e:n,i[1]=s;for(var o=2;o<r;o++)i[o]=a[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9487:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return o}});var l=a(3117),n=(a(7294),a(3905));const r={id:"lists",title:"@idearium/lists"},i=void 0,s={unversionedId:"lists",id:"lists",title:"@idearium/lists",description:"A library to make it easy to work with application lists. Application lists are used to record any fixed parts of your application, and use the following terminology:",source:"@site/docs/lists.md",sourceDirName:".",slug:"/lists",permalink:"/idearium-lib/docs/lists",draft:!1,editUrl:"https://github.com/idearium/idearium-lib/tree/master/docusaurus/docs/lists.md",tags:[],version:"current",frontMatter:{id:"lists",title:"@idearium/lists"},sidebar:"sidebar",previous:{title:"@idearium/kue",permalink:"/idearium-lib/docs/kue"},next:{title:"@idearium/log",permalink:"/idearium-lib/docs/log"}},u={},o=[{value:"Installation",id:"installation",level:2},{value:"Beta installation",id:"beta-installation",level:3},{value:"Usage",id:"usage",level:2},{value:"Create a library file",id:"create-a-library-file",level:3},{value:"Use the library file",id:"use-the-library-file",level:3},{value:"Functions",id:"functions",level:2},{value:"getKeys",id:"getkeys",level:3},{value:"getList",id:"getlist",level:3},{value:"getListKey",id:"getlistkey",level:3},{value:"getListValue",id:"getlistvalue",level:3},{value:"getSelectList",id:"getselectlist",level:3},{value:"getSelectListWithKeys",id:"getselectlistwithkeys",level:3},{value:"getSelectListWithValues",id:"getselectlistwithvalues",level:3},{value:"getValues",id:"getvalues",level:3}],d={toc:o},y="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(y,(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A library to make it easy to work with application lists. Application lists are used to record any fixed parts of your application, and use the following terminology:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"export default {\n    group: {\n        list: {\n            key: 'value'\n        }\n    },\n};\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"group")," is used to define a group of lists which share a context (usually described by the group name)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"list")," is the list itself.")),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn add -E @idearium/lists\n")),(0,n.kt)("h3",{id:"beta-installation"},"Beta installation"),(0,n.kt)("p",null,"If you need to install a beta version, you can:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn add -E @idearium/lists@beta\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"To use ",(0,n.kt)("inlineCode",{parentName:"p"},"@idearium/lists"),", follow these steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-library-file"},"Create a library file.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#use-the-library-file"},"Use the library file within your app."))),(0,n.kt)("h3",{id:"create-a-library-file"},"Create a library file"),(0,n.kt)("p",null,"Start by creating a library file containing your lists. Import ",(0,n.kt)("inlineCode",{parentName:"p"},"@idearium/lists")," and use it to wrap export so that your list is augmented with help functions to access your lists in various formats."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"// lib/lists.js\n\nimport lists from '@idearium/lists';\n\nconst groupedLists = {\n    common: {\n        days: {\n            friday: 'Friday',\n            monday: 'Monday',\n            saturday: 'Saturday',\n            sunday: 'Sunday',\n            thursday: 'Thursday',\n            tuesday: 'Tuesday',\n            wednesday: 'Wednesday'\n        },\n        states: {\n            ACT: 'Australian Capital Territory',\n            NSW: 'New South Wales',\n            NT: 'Northern Territory',\n            QLD: 'Queensland',\n            SA: 'South Australia',\n            TAS: 'Tasmania',\n            VIC: 'Victoria',\n            WA: 'Western Australia'\n        }\n    }\n};\n\nexport default lists({ lists: groupedLists });\n")),(0,n.kt)("h3",{id:"use-the-library-file"},"Use the library file"),(0,n.kt)("p",null,"You can now use the lists anywhere in your app."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"import lists from './lists';\n\nconst days = lists.getKeys({ group: 'common', list: 'days' });\n// days == ['friday','monday','saturday','sunday','thursday','tuesday','wednesday']\n\nconst states = lists.getKeys({ group: 'common', list: 'states' });\n// states == ['ACT','NSW','NT','QLD','SA','TAS','VIC', 'WA']\n")),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("p",null,"Once setup, there are a number of functions you can use to retrieve data from your lists."),(0,n.kt)("h3",{id:"getkeys"},"getKeys"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getKeys")," will return an array of the keys from a list."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const days = getKeys({ group: 'common', list: 'days' });\n// days == ['friday','monday','saturday','sunday','thursday','tuesday','wednesday']\n")),(0,n.kt)("h3",{id:"getlist"},"getList"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getList")," will return a list without any modification."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const days = getList({ group: 'common', list: 'days' });\n// days == {friday: 'Friday', monday: 'Monday', saturday: 'Saturday', sunday: 'Sunday', thursday: 'Thursday',tuesday: 'Tuesday', wednesday: 'Wednesday'}\n")),(0,n.kt)("h3",{id:"getlistkey"},"getListKey"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getListKey")," will return a specific key from a list."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const day = getListKey({ group: 'common', list: 'days', value: 'Thursday' });\n// days == 'thursday'\n")),(0,n.kt)("h3",{id:"getlistvalue"},"getListValue"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getListValue")," will return a specific value from a list."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const day = getListValue({ group: 'common', key: 'thursday', list: 'days' });\n// days == 'Thursday'\n")),(0,n.kt)("h3",{id:"getselectlist"},"getSelectList"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getSelectList")," will return an array of objects with label (",(0,n.kt)("inlineCode",{parentName:"p"},"value"),") and value (",(0,n.kt)("inlineCode",{parentName:"p"},"key"),") properties."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const days = getSelectList({ group: 'common', list: 'days' });\n// days == [{label: 'Friday', value: 'friday'}, {label: 'Monday', value: 'monday'}, {label:'Saturday', value:'saturday'}, {label: 'Sunday', value: 'sunday'}, {label: 'Thursday', value: 'thursday'}, {label: 'Tuesday', value: 'tuesday'}, {label: 'Wednesday', value: 'wednesday'}]\n")),(0,n.kt)("h3",{id:"getselectlistwithkeys"},"getSelectListWithKeys"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getSelectListWithKeys")," will return an array of objects with label and value properties, using only the ",(0,n.kt)("inlineCode",{parentName:"p"},"key"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const days = getSelectListWithKeys({ group: 'common', list: 'days' });\n// days == [{label: 'friday', value: 'friday'}, {label: 'monday', value: 'monday'}, {label:'saturday', value:'saturday'}, {label: 'sunday', value: 'sunday'}, {label: 'thursday', value: 'thursday'}, {label: 'tuesday', value: 'tuesday'}, {label: 'wednesday', value: 'wednesday'}]\n")),(0,n.kt)("h3",{id:"getselectlistwithvalues"},"getSelectListWithValues"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getSelectListWithValues")," will return an array of objects with label and value properties, using only the ",(0,n.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const days = getSelectListWithValues({ group: 'common', list: 'days' });\n// days == [{label: 'Friday', value: 'Friday'}, {label: 'Monday', value: 'Monday'}, {label:'Saturday', value:'Saturday'}, {label: 'Sunday', value: 'Sunday'}, {label: 'Thursday', value: 'Thursday'}, {label: 'Tuesday', value: 'Tuesday'}, {label: 'Wednesday', value: 'Wednesday'}]\n")),(0,n.kt)("h3",{id:"getvalues"},"getValues"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getValues")," will return an array of the values from a list."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const days = getValues({ group: 'common', list: 'days' });\n// days == ['Friday','Monday','Saturday','Sunday','Thursday','Tuesday','Wednesday']\n")))}p.isMDXComponent=!0}}]);