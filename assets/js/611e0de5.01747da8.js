"use strict";(self.webpackChunkidearium_lib_docs=self.webpackChunkidearium_lib_docs||[]).push([[926],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=l,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3321:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return u}});var n=r(3117),l=(r(7294),r(3905));const a={id:"promise-all-settled",title:"@idearium/promise-all-settled"},i=void 0,o={unversionedId:"promise-all-settled",id:"promise-all-settled",title:"@idearium/promise-all-settled",description:"Makes working with Promise.allSettled easier.",source:"@site/docs/promise-all-settled.md",sourceDirName:".",slug:"/promise-all-settled",permalink:"/idearium-lib/docs/promise-all-settled",draft:!1,editUrl:"https://github.com/idearium/idearium-lib/tree/master/docusaurus/docs/promise-all-settled.md",tags:[],version:"current",frontMatter:{id:"promise-all-settled",title:"@idearium/promise-all-settled"},sidebar:"sidebar",previous:{title:"@idearium/phone",permalink:"/idearium-lib/docs/phone"},next:{title:"@idearium/react-state-router",permalink:"/idearium-lib/docs/react-state-router"}},s={},u=[{value:"Installation",id:"installation",level:2},{value:"Beta installation",id:"beta-installation",level:3},{value:"Usage",id:"usage",level:2},{value:"promiseAllSettled",id:"promiseallsettled",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,l.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Makes working with ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise.allSettled")," easier."),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn add -E @idearium/promise-all-settled\n")),(0,l.kt)("h3",{id:"beta-installation"},"Beta installation"),(0,l.kt)("p",null,"If you need to install a beta version, you can:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn add -E @idearium/promise-all-settled@beta\n")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"promiseallsettled"},"promiseAllSettled"),(0,l.kt)("p",null,"To use ",(0,l.kt)("inlineCode",{parentName:"p"},"promiseAllSettled"),", require it from ",(0,l.kt)("inlineCode",{parentName:"p"},"@idearium/promise-all-settled"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const promiseAllSettled = require('@idearium/promise-all-settled');\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"promiseAllSettled")," will take an array of promises and return a result in the format ",(0,l.kt)("inlineCode",{parentName:"p"},"[errors, results]"),". The result will always contain all promises passed to it as it waits until all promises have settled before it returns."),(0,l.kt)("p",null,"This provides the ability to use async/await without try/catch blocks."),(0,l.kt)("p",null,"Use it like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const [errs, results] = await promiseAllSettled([someAsyncFn1, someAsyncFn2]);\n\nif (errs.length) {\n    return console.log(errs);\n}\n\n// Do other stuff knowing an error didn't occur.\n")))}d.isMDXComponent=!0}}]);