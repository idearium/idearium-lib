(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{86:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),i=(a(0),a(93)),o={id:"telemetry",title:"@idearium/telemetry"},l={unversionedId:"telemetry",id:"telemetry",isDocsHomePage:!1,title:"@idearium/telemetry",description:"The Idearium Open Telemetry implementation.",source:"@site/docs/telemetry.md",slug:"/telemetry",permalink:"/idearium-lib/docs/telemetry",editUrl:"https://github.com/idearium/idearium-lib/tree/master/docusaurus/docs/telemetry.md",version:"current",sidebar:"sidebar",previous:{title:"@idearium/safe-promise",permalink:"/idearium-lib/docs/safe-promise"},next:{title:"@idearium/text-sort",permalink:"/idearium-lib/docs/text-sort"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Configuration",id:"configuration",children:[]}]},{value:"Features",id:"features",children:[{value:"<code>traceId</code> middleware",id:"traceid-middleware",children:[]}]}],u={rightToc:c};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(i.a)("p",null,"The Idearium Open Telemetry implementation."),Object(i.a)("h2",{id:"installation"},"Installation"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add @idearium/telemetry\n")),Object(i.a)("h2",{id:"usage"},"Usage"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-Shell"}),"node --require @idearium/telemetry server.js\n")),Object(i.a)("h3",{id:"configuration"},"Configuration"),Object(i.a)("p",null,"You must have a few environment variables present in order for this package to do anything:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"TARGET_ENV")," must be set to something other than ",Object(i.a)("inlineCode",{parentName:"li"},"local"),"."),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"TRACE_EXPORTER_ACCOUNT_EMAIL")," must be set to the email of a service account on Google Cloud."),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"TRACE_EXPORTER_ACCOUNT_SECRET")," must be set to the private key of a service account on Google Cloud."),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"TRACE_EXPORTER_PROJECT_ID")," must be set to a Project ID on Google Cloud.")),Object(i.a)("p",null,"You can also have the following optional environment variables:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"OPENTELEMETRY_DEBUG")," set to ",Object(i.a)("inlineCode",{parentName:"li"},"'true'")," if you want to enable Open Telemetry debugging output in the console."),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"SVC")," should be set to the name of the app/service to include this information along with the request.")),Object(i.a)("blockquote",null,Object(i.a)("p",{parentName:"blockquote"},Object(i.a)("strong",{parentName:"p"},"Please note"),": this package hasn't been designed to run locally.")),Object(i.a)("h2",{id:"features"},"Features"),Object(i.a)("p",null,"There are a few extra features for this package."),Object(i.a)("h3",{id:"traceid-middleware"},Object(i.a)("inlineCode",{parentName:"h3"},"traceId")," middleware"),Object(i.a)("p",null,"If you'd like to expose a ",Object(i.a)("inlineCode",{parentName:"p"},"x-trace-id")," header with the ",Object(i.a)("inlineCode",{parentName:"p"},"traceId")," for a particular request, you can do so like this:"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const traceId = require('@idearium/telemetry/middleware/trace-id');\n\nconst bootstrapExpress = (opts) =>\n    new Promise((resolve) => {\n        log.info('Bootstrapping express');\n\n        const { app } = opts;\n\n        app.use(traceId);\n\n        return resolve(opts);\n    });\n")),Object(i.a)("p",null,"Each request that generates a trace ID, will now include the ID in the ",Object(i.a)("inlineCode",{parentName:"p"},"x-trace-id")," response header."))}s.isMDXComponent=!0},93:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=r.a.createContext({}),s=function(e){var t=r.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(a),m=n,b=d["".concat(o,".").concat(m)]||d[m]||p[m]||i;return a?r.a.createElement(b,l(l({ref:t},u),{},{components:a})):r.a.createElement(b,l({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);