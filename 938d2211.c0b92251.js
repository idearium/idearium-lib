(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),o=(n(0),n(83)),a={id:"log",title:"@idearium/log"},l={unversionedId:"log",id:"log",isDocsHomePage:!1,title:"@idearium/log",description:"The Idearium logger.",source:"@site/docs/log.md",slug:"/log",permalink:"/idearium-lib/docs/log",editUrl:"https://github.com/idearium/idearium-lib/tree/feature-monorepo/docusaurus/docs/log.md",version:"current",sidebar:"sidebar",previous:{title:"@idearium/lists",permalink:"/idearium-lib/docs/lists"},next:{title:"@idearium/mongoose",permalink:"/idearium-lib/docs/mongoose"}},s=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"InsightOps",id:"insightops",children:[]},{value:"Combining Transports",id:"combining-transports",children:[]}]}],c={rightToc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The Idearium logger."),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add @idearium/log\n")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"The Idearium logger takes the following environment variables:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"LOG_ENABLED")," - Whether to enable the logger or not. Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"LOG_LEVEL")," - The minimum log level to log. Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"info"),". Other accepted values are ",Object(o.b)("inlineCode",{parentName:"li"},"trace | debug | info | warn | error | fatal"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PINO_PRETTY_PRINT")," - Whether to pretty print the logs or not, useful for development. Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PINO_REDACT_PATHS")," - Optionally provide a comma separated list of paths to redact. ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/pinojs/pino/blob/master/docs/redaction.md#path-syntax"}),"https://github.com/pinojs/pino/blob/master/docs/redaction.md#path-syntax"))),Object(o.b)("h3",{id:"insightops"},"InsightOps"),Object(o.b)("p",null,"If you wish to log to a remote server (InsightOps), you will need the following variables:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"LOG_REMOTE")," - Whether to log to a remote server or not. Setting this to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," will disable pretty printing."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"INSIGHT_OPS_REGION")," - The InsightOps region (",Object(o.b)("inlineCode",{parentName:"li"},"eu"),")."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"INSIGHT_OPS_TOKEN")," - The InsightOps token.")),Object(o.b)("p",null,"Since Pino does not natively support in process transports, we expose a ",Object(o.b)("inlineCode",{parentName:"p"},"insightops")," logging script to send logs to InsightOps.\nTo use this, simply provide the necessary variables above and start the node process:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | insightops\n")),Object(o.b)("h3",{id:"combining-transports"},"Combining Transports"),Object(o.b)("p",null,"Sometimes you will want to use multiple transports. To do this you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"tee")," command in bash:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | tee insightops pino-stackdriver --project bar --credentials /credentials.json\n")))}p.isMDXComponent=!0},83:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(a,".").concat(d)]||b[d]||u[d]||o;return n?i.a.createElement(m,l(l({ref:t},c),{},{components:n})):i.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);