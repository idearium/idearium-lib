(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{80:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return u})),a.d(t,"default",(function(){return o}));var n=a(3),l=a(7),r=(a(0),a(84)),i={id:"lists",title:"@idearium/lists"},s={unversionedId:"lists",id:"lists",isDocsHomePage:!1,title:"@idearium/lists",description:"A library to make it easy to work with application lists. Application lists are used to record any fixed parts of your application, and use the following terminology:",source:"@site/docs/lists.md",slug:"/lists",permalink:"/idearium-lib/docs/lists",editUrl:"https://github.com/idearium/idearium-lib/tree/feature-monorepo/docusaurus/docs/lists.md",version:"current",sidebar:"sidebar",previous:{title:"@idearium/fetch",permalink:"/idearium-lib/docs/fetch"},next:{title:"@idearium/log",permalink:"/idearium-lib/docs/log"}},u=[{value:"Installation",id:"installation",children:[{value:"Beta installation",id:"beta-installation",children:[]}]},{value:"Usage",id:"usage",children:[{value:"Create a library file",id:"create-a-library-file",children:[]},{value:"Use the library file",id:"use-the-library-file",children:[]}]},{value:"Functions",id:"functions",children:[{value:"getKeys",id:"getkeys",children:[]},{value:"getList",id:"getlist",children:[]},{value:"getListKey",id:"getlistkey",children:[]},{value:"getListValue",id:"getlistvalue",children:[]},{value:"getSelectList",id:"getselectlist",children:[]},{value:"getSelectListWithKeys",id:"getselectlistwithkeys",children:[]},{value:"getSelectListWithValues",id:"getselectlistwithvalues",children:[]},{value:"getValues",id:"getvalues",children:[]}]}],c={rightToc:u};function o(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A library to make it easy to work with application lists. Application lists are used to record any fixed parts of your application, and use the following terminology:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"export default {\n    group: {\n        list: {\n            key: 'value'\n        }\n    },\n};\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"group")," is used to define a group of lists which share a context (usually described by the group name)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"list")," is the list itself.")),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add -E @idearium/lists\n")),Object(r.b)("h3",{id:"beta-installation"},"Beta installation"),Object(r.b)("p",null,"If you need to install a beta version, you can:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add -E @idearium/lists@beta\n")),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("p",null,"To use ",Object(r.b)("inlineCode",{parentName:"p"},"@idearium/lists"),", follow these steps:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#create-a-library-file"}),"Create a library file.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#use-the-library-file"}),"Use the library file within your app."))),Object(r.b)("h3",{id:"create-a-library-file"},"Create a library file"),Object(r.b)("p",null,"Start by creating a library file containing your lists. Import ",Object(r.b)("inlineCode",{parentName:"p"},"@idearium/lists")," and use it to wrap export so that your list is augmented with help functions to access your lists in various formats."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"// lib/lists.js\n\nimport lists from '@idearium/lists';\n\nconst groupedLists = {\n    common: {\n        days: {\n            friday: 'Friday',\n            monday: 'Monday',\n            saturday: 'Saturday',\n            sunday: 'Sunday',\n            thursday: 'Thursday',\n            tuesday: 'Tuesday',\n            wednesday: 'Wednesday'\n        },\n        states: {\n            ACT: 'Australian Capital Territory',\n            NSW: 'New South Wales',\n            NT: 'Northern Territory',\n            QLD: 'Queensland',\n            SA: 'South Australia',\n            TAS: 'Tasmania',\n            VIC: 'Victoria',\n            WA: 'Western Australia'\n        }\n    }\n};\n\nexport default lists({ lists: groupedLists });\n")),Object(r.b)("h3",{id:"use-the-library-file"},"Use the library file"),Object(r.b)("p",null,"You can now use the lists anywhere in your app."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"import lists from './lists';\n\nconst days = lists.getKeys({ group: 'common', list: 'days' });\n// days == ['friday','monday','saturday','sunday','thursday','tuesday','wednesday']\n\nconst states = lists.getKeys({ group: 'common', list: 'states' });\n// states == ['ACT','NSW','NT','QLD','SA','TAS','VIC', 'WA']\n")),Object(r.b)("h2",{id:"functions"},"Functions"),Object(r.b)("p",null,"Once setup, there are a number of functions you can use to retrieve data from your lists."),Object(r.b)("h3",{id:"getkeys"},"getKeys"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getKeys")," will return an array of the keys from a list."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const days = getKeys({ group: 'common', list: 'days' });\n// days == ['friday','monday','saturday','sunday','thursday','tuesday','wednesday']\n")),Object(r.b)("h3",{id:"getlist"},"getList"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getList")," will return a list without any modification."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const days = getList({ group: 'common', list: 'days' });\n// days == {friday: 'Friday', monday: 'Monday', saturday: 'Saturday', sunday: 'Sunday', thursday: 'Thursday',tuesday: 'Tuesday', wednesday: 'Wednesday'}\n")),Object(r.b)("h3",{id:"getlistkey"},"getListKey"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getListKey")," will return a specific key from a list."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const day = getListKey({ group: 'common', list: 'days', value: 'Thursday' });\n// days == 'thursday'\n")),Object(r.b)("h3",{id:"getlistvalue"},"getListValue"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getListValue")," will return a specific value from a list."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const day = getListValue({ group: 'common', key: 'thursday', list: 'days' });\n// days == 'Thursday'\n")),Object(r.b)("h3",{id:"getselectlist"},"getSelectList"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getSelectList")," will return an array of objects with label (",Object(r.b)("inlineCode",{parentName:"p"},"value"),") and value (",Object(r.b)("inlineCode",{parentName:"p"},"key"),") properties."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const days = getSelectList({ group: 'common', list: 'days' });\n// days == [{label: 'Friday', value: 'friday'}, {label: 'Monday', value: 'monday'}, {label:'Saturday', value:'saturday'}, {label: 'Sunday', value: 'sunday'}, {label: 'Thursday', value: 'thursday'}, {label: 'Tuesday', value: 'tuesday'}, {label: 'Wednesday', value: 'wednesday'}]\n")),Object(r.b)("h3",{id:"getselectlistwithkeys"},"getSelectListWithKeys"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getSelectListWithKeys")," will return an array of objects with label and value properties, using only the ",Object(r.b)("inlineCode",{parentName:"p"},"key"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const days = getSelectListWithKeys({ group: 'common', list: 'days' });\n// days == [{label: 'friday', value: 'friday'}, {label: 'monday', value: 'monday'}, {label:'saturday', value:'saturday'}, {label: 'sunday', value: 'sunday'}, {label: 'thursday', value: 'thursday'}, {label: 'tuesday', value: 'tuesday'}, {label: 'wednesday', value: 'wednesday'}]\n")),Object(r.b)("h3",{id:"getselectlistwithvalues"},"getSelectListWithValues"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getSelectListWithValues")," will return an array of objects with label and value properties, using only the ",Object(r.b)("inlineCode",{parentName:"p"},"value"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const days = getSelectListWithValues({ group: 'common', list: 'days' });\n// days == [{label: 'Friday', value: 'Friday'}, {label: 'Monday', value: 'Monday'}, {label:'Saturday', value:'Saturday'}, {label: 'Sunday', value: 'Sunday'}, {label: 'Thursday', value: 'Thursday'}, {label: 'Tuesday', value: 'Tuesday'}, {label: 'Wednesday', value: 'Wednesday'}]\n")),Object(r.b)("h3",{id:"getvalues"},"getValues"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"getValues")," will return an array of the values from a list."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-JavaScript"}),"const days = getValues({ group: 'common', list: 'days' });\n// days == ['Friday','Monday','Saturday','Sunday','Thursday','Tuesday','Wednesday']\n")))}o.isMDXComponent=!0},84:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return p}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),o=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=o(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},y=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=o(a),y=n,p=d["".concat(i,".").concat(y)]||d[y]||b[y]||r;return a?l.a.createElement(p,s(s({ref:t},c),{},{components:a})):l.a.createElement(p,s({ref:t},c))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=y;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<r;c++)i[c]=a[c];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,a)}y.displayName="MDXCreateElement"}}]);