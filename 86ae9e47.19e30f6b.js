(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{77:function(e,n,o){"use strict";o.r(n),o.d(n,"frontMatter",(function(){return i})),o.d(n,"metadata",(function(){return c})),o.d(n,"rightToc",(function(){return s})),o.d(n,"default",(function(){return u}));var t=o(3),r=o(7),a=(o(0),o(85)),i={id:"mongoose",title:"@idearium/mongoose"},c={unversionedId:"mongoose",id:"mongoose",isDocsHomePage:!1,title:"@idearium/mongoose",description:"Mongoose connection defaults.",source:"@site/docs/mongoose.md",slug:"/mongoose",permalink:"/idearium-lib/docs/mongoose",editUrl:"https://github.com/idearium/idearium-lib/tree/master/docusaurus/docs/mongoose.md",version:"current",sidebar:"sidebar",previous:{title:"@idearium/log-structured",permalink:"/idearium-lib/docs/log-structured"},next:{title:"@idearium/safe-promise",permalink:"/idearium-lib/docs/safe-promise"}},s=[{value:"Installation",id:"installation",children:[{value:"Beta installation",id:"beta-installation",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"Logging",id:"logging",children:[]}],l={rightToc:s};function u(e){var n=e.components,o=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},l,o,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Mongoose connection defaults."),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Please note"),": mongoose is a peer dependency so you'll need to add it specifically to your project."),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add -E mongoose@4.11 @idearium/mongoose\n")),Object(a.b)("h3",{id:"beta-installation"},"Beta installation"),Object(a.b)("p",null,"If you need to install a beta version, you can:"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add -E mongoose@4.11 @idearium/mongoose@beta\n")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-JavaScript"}),"const mongoose = require('mongoose');\nconst { connect } = require('@idearium/mongoose');\n\nconnect({ mongoose, uri: process.env.MONGO_DB_URL, options: { ssl: process.env.MONGO_DB_SSL === 'true' } })\n    .then(() => console.log('Mongoose connected to MongoDB...'))\n")),Object(a.b)("p",null,"The following are the default options:"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{}),"{\n    reconnectInterval: 500,\n    reconnectTries: Number.MAX_VALUE,\n    sslValidate: Boolean(opts.ssl || opts.tls),\n    useMongoClient: true\n}\n")),Object(a.b)("p",null,"These can be replaced by adding your own values in an ",Object(a.b)("inlineCode",{parentName:"p"},"options")," object."),Object(a.b)("h4",{id:"connect-mongoose-options---uri-"},Object(a.b)("inlineCode",{parentName:"h4"},"connect({ mongoose, options = {}, uri })")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"connect")," function is used to connect Mongoose to MongoDB."),Object(a.b)("h4",{id:"createconnections-mongoose-options---uris-"},Object(a.b)("inlineCode",{parentName:"h4"},"createConnections({ mongoose, options = {}, uris })")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"createConnections")," function uses ",Object(a.b)("inlineCode",{parentName:"p"},"mongoose.createConnection")," to connect Mongoose to multiple databases."),Object(a.b)("p",null,"Use ",Object(a.b)("inlineCode",{parentName:"p"},"uris")," to pass in an array of MongoDB connection strings."),Object(a.b)("h2",{id:"logging"},"Logging"),Object(a.b)("p",null,"This package uses ",Object(a.b)("a",Object(t.a)({parentName:"p"},{href:"https://idearium.github.io/idearium-lib/docs/log"}),"@idearium/log"),". Follow the docs on how to configure it as required."))}u.isMDXComponent=!0},85:function(e,n,o){"use strict";o.d(n,"a",(function(){return p})),o.d(n,"b",(function(){return m}));var t=o(0),r=o.n(t);function a(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function i(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function c(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?i(Object(o),!0).forEach((function(n){a(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function s(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=r.a.createContext({}),u=function(e){var n=r.a.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):c(c({},n),e)),o},p=function(e){var n=u(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var o=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(o),d=t,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return o?r.a.createElement(m,c(c({ref:n},l),{},{components:o})):r.a.createElement(m,c({ref:n},l))}));function m(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=o.length,i=new Array(a);i[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,i[1]=c;for(var l=2;l<a;l++)i[l]=o[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,o)}d.displayName="MDXCreateElement"}}]);