(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{71:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return u})),r.d(t,"default",(function(){return s}));var n=r(3),o=r(7),a=(r(0),r(87)),i={id:"log-structured",title:"@idearium/log-structured"},c={unversionedId:"log-structured",id:"log-structured",isDocsHomePage:!1,title:"@idearium/log-structured",description:"The Idearium logger HTTP structured logging formatter.",source:"@site/docs/log-structured.md",slug:"/log-structured",permalink:"/idearium-lib/docs/log-structured",editUrl:"https://github.com/idearium/idearium-lib/tree/master/docusaurus/docs/log-structured.md",version:"current",sidebar:"sidebar",previous:{title:"@idearium/log-insightops",permalink:"/idearium-lib/docs/log-insightops"},next:{title:"@idearium/mongoose",permalink:"/idearium-lib/docs/mongoose"}},u=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Pretty printing",id:"pretty-printing",children:[]},{value:"Combining formatters and transports",id:"combining-formatters-and-transports",children:[]}]}],l={rightToc:u};function s(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Idearium logger HTTP structured logging formatter."),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add @idearium/log-structured\n")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"The Idearium logger HTTP structured logging formatter transport takes log output from ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/idearium-lib/docs/log-http"}),Object(a.b)("inlineCode",{parentName:"a"},"@idearium/log-http"))," and structures it according to ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/logging/docs/structured-logging"}),"GCP Structured Logging"),"."),Object(a.b)("p",null,"It will transform log with ",Object(a.b)("inlineCode",{parentName:"p"},"req")," and ",Object(a.b)("inlineCode",{parentName:"p"},"res")," properties, completely ignoring anything."),Object(a.b)("p",null,"Start your Node application and pipe the output to the ",Object(a.b)("inlineCode",{parentName:"p"},"structured")," script (found at ",Object(a.b)("inlineCode",{parentName:"p"},"node_modules/.bin/structured")," once this package is installed):"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | structured\n")),Object(a.b)("h3",{id:"pretty-printing"},"Pretty printing"),Object(a.b)("p",null,"If you want to pretty print the results of this formatter, pipe the output to ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/pinojs/pino-pretty"}),"'pino-pretty'"),";"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | structure | pino-pretty\n")),Object(a.b)("h3",{id:"combining-formatters-and-transports"},"Combining formatters and transports"),Object(a.b)("p",null,"Sometimes you will want to use multiple transports/formatters. To do this you can use the ",Object(a.b)("inlineCode",{parentName:"p"},"tee")," command in bash:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | structured | tee insightops pino-stackdriver --project bar --credentials /credentials.json\n")))}s.isMDXComponent=!0},87:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=s(r),b=n,m=p["".concat(i,".").concat(b)]||p[b]||d[b]||a;return r?o.a.createElement(m,c(c({ref:t},l),{},{components:r})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);